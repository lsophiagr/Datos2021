CREATE TABLE cooperativa(
    id_cooperativa NUMBER GENERATED BY DEFAULT AS IDENTITY,
    nombre VARCHAR(50) NOT NULL,
    dirreccion VARCHAR(50) NOT NULL,
    PRIMARY KEY(id_cooperativa)
);

CREATE TABLE cooperativa_balance(
    id_balance NUMBER GENERATED BY DEFAULT AS IDENTITY,
    id_cooperativa NUMBER NOT NULL,
    fecha DATE NOT NULL,
    saldo_cdp FLOAT(4) NOT NULL,
    saldo_prestamo FLOAT(4) NOT NULL,
    saldo_cuenta FLOAT(4) NOT NULL,
    PRIMARY KEY(id_balance),
    FOREIGN KEY(id_cooperativa) REFERENCES cooperativa(id_cooperativa)
);

CREATE TABLE cliente(
    id_cliente NUMBER GENERATED BY DEFAULT AS IDENTITY,
    id_cooperativa NUMBER NOT NULL,
    primer_nombre VARCHAR(50) NOT NULL,
    segundo_nombrre VARCHAR(50) NOT NULL,
    primer_apellido VARCHAR(50) NOT NULL,
    segundo_apellido VARCHAR(50) NOT NULL,
    correo VARCHAR(50) NOT NULL,
    direccion VARCHAR(100) NOT NULL,
    numero_telofonico  VARCHAR(20),
    nacionalidad  VARCHAR(50) NOT NULL,
    fecha DATE NOT NULL,
    PRIMARY KEY(id_cliente),
    FOREIGN KEY(id_cooperativa) REFERENCES cooperativa(id_cooperativa)
);

CREATE TABLE cuenta(
    id_cuenta NUMBER GENERATED BY DEFAULT AS IDENTITY,
    id_cliente NUMBER NOT NULL,
    fecha_creada DATE NOT NULL,
    saldo_disponible FLOAT(4) NOT NULL,
    tipo_moneda VARCHAR(10) CHECK(tipo_moneda=ANY('GTQ','USD')) NOT NULL,
    PRIMARY KEY(id_cuenta),
    FOREIGN KEY(id_cliente) REFERENCES cliente(id_cliente)
);

CREATE TABLE cuenta_detalle(
    id_cuenta_detalle NUMBER GENERATED BY DEFAULT AS IDENTITY,
    id_cuenta NUMBER NOT NULL,
    trans_tipo VARCHAR(10) CHECK (trans_tipo = ANY('Deposito', 'Retiro')),
    monto FLOAT(4) NOT NULL,
    PRIMARY KEY(id_cuenta_detalle),
    FOREIGN KEY(id_cuenta) REFERENCES cuenta(id_cuenta)
);

CREATE TABLE cdp(
    id_cdp NUMBER GENERATED BY DEFAULT AS IDENTITY,
    id_cliente NUMBER NOT NULL,
    fecha_creada DATE NOT NULL,
    plazo INTEGER CHECK (plazo = ANY(6,12,24)) NOT NULL,
    interes INTEGER CHECK (interes = ANY(5,6,7)) NOT NULL,
    monto FLOAT(4) NOT NULL,
    fecha_terminacion DATE AS (ADD_MONTHS(fecha_creada, plazo)),
    interes_total AS ((monto * (interes/1200)) * plazo) NOT NULL,
    saldo_total AS (monto + (monto * (interes/1200)) * plazo) NOT NULL,
    tipo_moneda VARCHAR(10) CHECK(tipo_moneda=ANY('GTQ','USD')) NOT NULL,
    PRIMARY KEY(id_cdp),
    FOREIGN KEY(id_cliente) REFERENCES cliente(id_cliente)
);

CREATE TABLE cdp_detalle(
    id_cdp_detalle NUMBER GENERATED BY DEFAULT AS IDENTITY,
    id_cdp NUMBER NOT NULL,
    fecha_pago DATE NOT NULL,
    interes FLOAT(4) NOT NULL,
    monto FLOAT(4) NOT NULL,
    estado VARCHAR(10) CHECK(estado=ANY('True','False')),
    PRIMARY KEY(id_cdp_detalle),
    FOREIGN KEY(id_cdp) REFERENCES cdp(id_cdp)
);

CREATE TABLE prestamo(
    id_prestamo NUMBER GENERATED BY DEFAULT AS IDENTITY,
    id_cliente NUMBER NOT NULL,
    fecha_creada DATE NOT NULL,
    plazo INTEGER CHECK (plazo  between 3 and 36) NOT NULL,
    fecha_terminacion DATE AS (ADD_MONTHS(fecha_creada, plazo)),
    monto FLOAT(4) NOT NULL,
    interes FLOAT(4) NOT NULL,
    pago_interes AS ((monto * (interes/1200)) * plazo),
    pago_total AS (monto + (monto * (interes/1200)) * plazo) NOT NULL,
    tipo_moneda VARCHAR(10) CHECK(tipo_moneda=ANY('GTQ','USD')) NOT NULL,
    saldo FLOAT(4) NOT NULL,
    PRIMARY KEY (id_prestamo),
    FOREIGN KEY (id_cliente) REFERENCES cliente(id_cliente)
);

CREATE TABLE prestamo_detalle(
    id_prestamo_detalle NUMBER GENERATED BY DEFAULT AS IDENTITY,
    id_prestamo NUMBER NOT NULL,
    fecha_pago DATE NOT NULL,
    saldo_pagar FLOAT(4) NOT NULL,
    estado VARCHAR(10) CHECK(estado=ANY('True','False')),
    PRIMARY KEY(id_prestamo_detalle),
    FOREIGN KEY(id_prestamo) REFERENCES prestamo(id_prestamo)
);


CREATE TABLE operaciones(
    id_operaciones NUMBER GENERATED BY DEFAULT AS IDENTITY,
    id_prestamo_detalle NUMBER,
    id_cdp_detalle NUMBER,
    id_cuenta NUMBER NOT NULL,
    id_destino NUMBER,
    trans_tipo VARCHAR(10) CHECK (trans_tipo = ANY('Deposito', 'Retiro')),
    monto FLOAT(4) NOT NULL,
    PRIMARY KEY(id_operaciones),
    FOREIGN KEY(id_prestamo_detalle) REFERENCES prestamo_detalle(id_prestamo_detalle),
    FOREIGN KEY(id_cdp_detalle) REFERENCES cdp_detalle(id_cdp_detalle),
    FOREIGN KEY(id_cuenta) REFERENCES cuenta(id_cuenta)
);

